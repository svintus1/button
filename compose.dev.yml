services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    container_name: frontend
    restart: always
    networks:
      - myNetwork
    environment:
      -  APP_MODE=development
    ports:
      - 3002:3000
    volumes:
      - ./frontend:/opt/app  # Монтируем папку фронтенда
      - /opt/app/node_modules  # Изолируем зависимости

  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    container_name: backend
    restart: always
    environment:
      - APP_ENV=development
    env_file:
      - ./db-data/.env
    networks:
      - myNetwork
    ports:
      - 8002:8000
    volumes:
      - ./backend:/opt/app # Монтируем папку бэкенда
      - /opt/app/__pycache__ # Изолируем кэш Python
    depends_on:
      - db

  db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    env_file:
      - ./db-data/.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - myNetwork

networks:
  myNetwork:
    driver: bridge

volumes:
  pg_data: